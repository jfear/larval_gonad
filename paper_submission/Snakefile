"""Scrip to generate figures and needed material for the Science Submssion"""
import os
import yaml
from pathlib import Path

import pandas as pd

from larval_gonad.config import read_config
from larval_gonad.io import safe_gene_name

workdir: "."
# configfile: "../config/common.yaml"
config = read_config("../config/common.yaml")
colors_config = read_config("../config/colors.yaml")

SAMPLES = ["testis1", "testis2", "testis3"]

REFERENCES_DIR = os.environ.get("REFERENCES_DIR", config.get("REFERENCES_DIR", ""))
ASSEMBLY = config["assembly"]
TAG = config["tag"]

LIT_GENES = read_config("../config/literature_genes.yaml")
PTRAP_GENES = read_config("../config/ptrap_genes.yaml")
COLORS = yaml.full_load(open("../config/colors.yaml"))

FBGN2SYMBOL = (
    pd.read_feather("../references/gene_annotation_dmel_r6-26.feather", columns=["FBgn", "gene_symbol"])
    .set_index("FBgn")
    .squeeze()
    .reindex(pd.read_feather("../output/seurat3-cluster-wf/combined_n3_normalized.feather", columns=["FBgn"]).FBgn.unique().tolist())
    .map(safe_gene_name)
)

FBGN2CHROM = (
    pd.read_feather("../references/gene_annotation_dmel_r6-26.feather", columns=["FBgn", "gene_symbol", "FB_chrom"])
    .set_index(["FBgn", "gene_symbol"])
    .squeeze()
    .rename("Chromosome")
    .reset_index()
)

wildcard_constraints: 
    sample="testis\d"

rule all:
    input: 
        # Main Figures
        "../output/paper_submission/figures/fig1a.svg",
        "../output/paper_submission/figures/fig2.parts.done",
        "../output/paper_submission/figures/fig3.parts.done",
        "../output/paper_submission/figures/fig4.svg",
        "../output/paper_submission/figures/fig5.svg",
        # Supplemental Figures

        # Table S1
        "../output/paper_submission/TableS1.xlsx",
        # Table S2
        # Supplemental Files
        '../output/paper_submission/scRNAseq_raw_counts.tsv.gz',
        '../output/paper_submission/scRNAseq_seurat_normalized_counts.tsv.gz',
        # expand("../output/paper_submission/figures/projections_all_genes/{fbgn}_{symbol}.svg", zip, fbgn=FBGN2SYMBOL.index.tolist(), symbol=FBGN2SYMBOL.values.tolist()),   ## commented out to spead up build snakemake.

################################################################################
# Figure 1a: Chromosome Expression
################################################################################
rule fig1a_data:
    input: 
        gene_annot=f"../references/gene_annotation_{ASSEMBLY}_{TAG}.feather",
        w1118="../output/expression-atlas-wf/w1118_gene_counts.feather",
        OreR="../output/expression-atlas-wf/OreR_gene_counts.feather",
        L3_bulk="../output/bulk-rnaseq-wf/testis_ovary_counts.feather",
    output: "../output/paper_submission/fig1a_data_avg_tpm_per_chrom.feather",
    script: "scripts/fig1a_data.py"


rule fig1a_stats:
    input: rules.fig1a_data.output[0]
    output: "../output/paper_submission/fig1a_stats.tsv"
    script: "scripts/fig1a_stats.py"


rule fig1a:
    input: 
        rules.fig1a_data.output[0],
        rules.fig1a_stats.output[0]
    output: "../output/paper_submission/figures/fig1a.svg"
    params: colors=COLORS
    script: "scripts/fig1a.py"

################################################################################
# Figure 1b: Sex Biased Expression By Chromosome
################################################################################

################################################################################
# Figure 2: scRNA-Seq intro, cluster, and annotate
################################################################################
rule plot_cluster_legend:
    params:
        cluster_colors=COLORS["clusters"],
        legend_names=config["legend_names"]
    output: "../output/paper_submission/figures/cluster-legend.svg"
    script: "scripts/plot_cluster_legend.py"


rule plot_gene_umap:
    input:
        gene_annot=f"../references/gene_annotation_dmel_{TAG}.feather",
        zscores="../output/seurat3-cluster-wf/zscore_by_cell.feather",
        umap="../output/seurat3-cluster-wf/combined_n3_umap.feather",
    output: "../output/paper_submission/figures/fig2_umap.svg"
    script: "scripts/plot_gene_umap.py"


rule plot_gene_expression_pattern:
    input:
        gene_annot=f"../references/gene_annotation_dmel_{TAG}.feather",
        clusters="../output/seurat3-cluster-wf/combined_n3_clusters.feather",
        raw="../output/cellselection-wf/raw.feather",
    output: 
        tpm="../output/paper_submission/figures/fig2_tpm.svg",
        scaled="../output/paper_submission/figures/fig2_scaled_tpm.svg",
    params: 
        colors=colors_config["clusters"],
        cluster_order=config["cluster_order"]
    script: "scripts/plot_gene_expression_pattern.py"


rule fig2:
    input: 
        legend=rules.plot_cluster_legend.output[0],
        umap=rules.plot_gene_umap.output[0],
        pattern=rules.plot_gene_expression_pattern.output.scaled,
        heatmap="../output/seurat3-cluster-wf/combined_n3_figures/uniq_and_multi_biomarkers.svg",
    output: touch("../output/paper_submission/figures/fig2.parts.done")


################################################################################
# Figure 3: Chromosome Expression and Gene Counts
################################################################################
rule plot_gene_ontology_all_genes:
    input:
        background="../references/gene_annotation_dmel_r6-26.tsv",
        target_genes="../output/cellselection-wf/expressed_genes.pkl",
    output: 
        summary="../output/paper_submission/gene_ontology_all_genes.tsv",
        fig="../output/paper_submission/figures/gene_ontology_all_genes.svg",
    script: "scripts/plot_gene_ontology.py"

rule plot_gene_ontology_widely_expressed_genes:
    input:
        background="../output/cellselection-wf/expressed_genes.pkl",
        target_genes="../output/cellselection-wf/commonly_expressed_genes.pkl",
    output: 
        summary="../output/paper_submission/gene_ontology_widely_expressed_genes.tsv",
        fig="../output/paper_submission/figures/gene_ontology_widely_expressed_genes.svg",
    script: "scripts/plot_gene_ontology.py"

rule plot_fig3_boxplots:
    input: 
        gene_annot="../references/gene_annotation_dmel_r6-26.feather",
        expressed_fbgns="../output/cellselection-wf/expressed_genes.pkl",
        widely_expressed_fbgns="../output/cellselection-wf/commonly_expressed_genes.pkl",
        tpm="../output/seurat3-cluster-wf/tpm_by_cluster.feather",
        expressed_ratios="../output/x-to-a-wf/db/expressed.dat",
        widely_expressed_ratios="../output/x-to-a-wf/db/commonly_expressed.dat",
    params:
          cluster_color=COLORS["clusters"],
          cluster_order=config['cluster_order'],
    output: "../output/paper_submission/figures/fig3_boxplots.svg"
    script: "scripts/plot_fig3_boxplots.py"

rule fig3:
    input: 
        rules.plot_gene_ontology_all_genes.output[0],
        rules.plot_gene_ontology_widely_expressed_genes.output[0],
        rules.plot_fig3_boxplots.output[0],
    output: touch("../output/paper_submission/figures/fig3.parts.done")

################################################################################
# Figure 4: Chromosome Spatial Localization
################################################################################
rule fig4:
    input:
        volume="../output/fish-wf/chrom_volume.svg",
        sphere="../output/fish-wf/sphericity.svg"
    output: "../output/paper_submission/figures/fig4.svg"
    script: "scripts/fig4.py"


################################################################################
# Figure 5: Pol II
################################################################################
rule fig5:
    input: "../output/polII-wf/s2_and_s5_boxplot.svg"
    output: "../output/paper_submission/figures/fig5.svg"
    shell: "cp {input[0]} {output[0]}"

####################################
# Table S1: bulk data
####################################
## Normalized Data (L3 Testis, L3 Ovary, Adult Testis, Adult Ovary)
## Correlation (Bulk vs Single-Cell)
rule larval_bulk_gene_level:
    input: "../output/bulk-rnaseq-wf/rnaseq_aggregation/gene_level_counts.tsv"
    output: '../output/paper_submission/larval_bulk_RNA-Seq_gene_level_counts.tsv.gz'
    run:
        (
            pd.read_csv(input[0], sep="\t")
            .set_index("Geneid")
            .rename_axis("FBgn")
            .reset_index()
            .merge(FBGN2CHROM, on="FBgn", how="left")
            .set_index(["FBgn", "gene_symbol", "Chromosome"])
            .to_csv(output[0], sep="\t")
        )


rule adult_bulk_gene_level:
    input: 
        data="../output/expression-atlas-wf/w1118_gene_counts.feather",
        gene_annot="../references/gene_annotation_dmel_r6-26.feather"
    output: '../output/paper_submission/adult_bulk_RNA-Seq_gene_level_counts.tsv.gz'
    run: 
        (
            pd.pivot_table(
                pd.read_feather(input[0], columns=["FBgn", "sample_ID", "Count"]),
                index="FBgn",
                columns="sample_ID",
                values="Count"
            )
            .reset_index()
            .merge(FBGN2CHROM, on="FBgn", how="left")
            .set_index(["FBgn", "gene_symbol", "Chromosome"])
            .to_csv(output[0], sep="\t")
        )
        

rule spearman_corr_bulk_vs_sum_single_cell:
    input:
        gene_annot="../references/gene_annotation_dmel_r6-26.feather",
        larval_scrnaseq="../output/seurat3-cluster-wf/aggegated_gene_counts.feather",
        larval_bulk="../output/bulk-rnaseq-wf/rnaseq_aggregation/tpm_gene_level_counts.tsv",
    output: "../output/paper_submission/spearman_corr_bulk_vs_sum_single_cell.tsv"
    script: "scripts/correlation_table_bulk_sum_single_cell.py"


rule spearman_corr_bulk_vs_sum_single_cell_pvals:
    input:
        gene_annot="../references/gene_annotation_dmel_r6-26.feather",
        larval_scrnaseq="../output/seurat3-cluster-wf/aggegated_gene_counts.feather",
        larval_bulk="../output/bulk-rnaseq-wf/rnaseq_aggregation/tpm_gene_level_counts.tsv",
    output: "../output/paper_submission/spearman_corr_bulk_vs_sum_single_cell_pvals.tsv"
    script: "scripts/correlation_table_bulk_sum_single_cell_pvals.py"


rule spearman_corr_bulk_vs_single_cell_clusters:
    input:
        gene_annot="../references/gene_annotation_dmel_r6-26.feather",
        larval_scrnaseq="../output/seurat3-cluster-wf/tpm_by_cluster_rep.feather",
        larval_bulk="../output/bulk-rnaseq-wf/rnaseq_aggregation/tpm_gene_level_counts.tsv",
        adult_bulk="../output/expression-atlas-wf/w1118_gene_counts.feather",
    output: "../output/paper_submission/spearman_corr_bulk_vs_single_cell_clusters.tsv"
    script: "scripts/correlation_table_bulk_vs_single_cell_clusters.py"


rule table_s1:
    input:
        larval=rules.larval_bulk_gene_level.output[0],
        adult=rules.adult_bulk_gene_level.output[0],
        corr_reps=rules.spearman_corr_bulk_vs_sum_single_cell.output[0],
        corr_clusters=rules.spearman_corr_bulk_vs_single_cell_clusters.output[0]
    output: "../output/paper_submission/TableS1.xlsx"
    params:
        cluster_order=config["cluster_order"]
    script: "scripts/table_s1.py"

####################################
# Table S2: Single-cell RNA-Seq Data
####################################
rule cell_metadata:
    input: 
        metadata="../output/cellselection-wf/cell_metadata.feather",
        clusters="../output/seurat3-cluster-wf/combined_n3_clusters.feather",
        cell_calls=expand("../output/cellselection-wf/{sample}_combined_cell_calls.feather", sample=["testis1", "testis2", "testis3"]),
        scrublets=expand("../output/cellselection-wf/{sample}_scrublet_dublets.txt", sample=["testis1", "testis2", "testis3"]),
        umap="../output/seurat3-cluster-wf/combined_n3_umap.feather",
        autosome_ratios_all_genes="../output/x-to-a-wf/autosome_ratios_expressed_by_cell.feather",
        autosome_ratios_commonly_expressed_genes="../output/x-to-a-wf/autosome_ratios_commonly_expressed_by_cell.feather",
    output: "../output/paper_submission/cell_metadata.tsv"
    script: "scripts/cell_metadata_table.py"

rule gene_metadata:
    input: 
        gene_annot="../references/gene_annotation_dmel_r6-26.feather",
        biomarkers="../output/seurat3-cluster-wf/combined_n3_biomarkers.feather",
        raw="../output/seurat3-cluster-wf/raw_by_cluster_rep.feather",
        tpm="../output/seurat3-cluster-wf/tpm_by_cluster_rep.feather",
        zscore="../output/seurat3-cluster-wf/zscore_by_cluster_rep.feather",
        tau="../output/expression-atlas-wf/tau_housekeeping/male_fbgns.pkl",
        tsps="../output/expression-atlas-wf/tsps_housekeeping/male_fbgns.pkl",
    params: 
        cluster_annot=config['cluster_annot'],
        cluster_order=config['cluster_order'],
    output: "../output/paper_submission/gene_metadata.tsv"
    script: "scripts/gene_metadata_table.py"

rule cluster_metadata:
    input:
        clusters="../output/seurat3-cluster-wf/combined_n3_clusters.feather",
        tpm="../output/seurat3-cluster-wf/tpm_by_cluster.feather",
    params:
        cluster_annot=config["cluster_annot"],
        cluster_order=config["cluster_order"],
        legend_names=config["legend_names"],
    output: "../output/paper_submission/cluster_metadata.tsv"
    script: "scripts/cluster_metadata_table.py"

rule biomarkers_to_tsv:
    input: "../output/seurat3-cluster-wf/combined_n3_biomarkers.feather"
    output: "../output/paper_submission/one_vs_rest.tsv"
    params: cluster_annot = config["cluster_annot"]
    run:
        (
            pd.read_feather(input[0])
            .merge(FBGN2CHROM, on=["FBgn", "gene_symbol"], how="left")
            .set_index(["FBgn", "gene_symbol", "Chromosome"])
            .assign(cluster=lambda x: x.cluster.map(lambda y: params.cluster_annot[y]))
            .to_csv(output[0], sep="\t")
        )

rule table_s2:
    input: 
        cell=rules.cell_metadata.output[0],
        gene=rules.gene_metadata.output[0],
        cluster=rules.cluster_metadata.output[0],
        biomarkers=rules.biomarkers_to_tsv.output[0],
    output: "../output/paper_submission/TableS2.xlsx"
    script: "scripts/table_s2.py"


####################################
# Table S3: Literature Genes
####################################
################################################################################
# Files
################################################################################
rule raw_to_tsv:
    input: '../output/cellselection-wf/raw.feather'
    output: '../output/paper_submission/scRNAseq_raw_counts.tsv.gz'
    run:
        (
            pd.read_feather(input[0])
            .merge(FBGN2CHROM, on="FBgn", how="left")
            .set_index(["FBgn", "gene_symbol", "Chromosome"])
            .to_csv(output[0], sep="\t")
        )


rule seurat_normalized_to_tsv:
    input: '../output/seurat3-cluster-wf/combined_n3_normalized.feather'
    output: '../output/paper_submission/scRNAseq_seurat_normalized_counts.tsv.gz'
    run:
        (
            pd.read_feather(input[0])
            .merge(FBGN2CHROM, on=["FBgn", "gene_symbol"], how="left")
            .set_index(["FBgn", "gene_symbol", "Chromosome"])
            .to_csv(output[0], sep="\t")
        )


rule plot_umaps_all_genes:
    input:
        gene_annot=f"../references/gene_annotation_dmel_{TAG}.feather",
        clusters="../output/seurat3-cluster-wf/combined_n3_clusters.feather",
        zscores="../output/seurat3-cluster-wf/zscore_by_cell.feather",
        umap="../output/seurat3-cluster-wf/combined_n3_umap.feather",
        norm="../output/seurat3-cluster-wf/combined_n3_normalized.feather"
    output: "../output/paper_submission/figures/projections_all_genes/{fbgn}_{symbol}.svg"
    script: "scripts/plot_umap_projections.py"


################################################################################
# Deprecated
################################################################################
rule plot_lit_gene_evidence:
    input:
         gene_metadata = f"../references/gene_annotation_{ASSEMBLY}_{TAG}.feather",
         lit_evidence = '../data/external/miriam/lit_gene_dummy_vars.tsv',
         zscore_by_cluster_rep="../output/seurat3-cluster-wf/zscore_by_cluster_rep.feather"
    output: "../output/paper_submission/figures/lit-gene-evidence.svg"
    params: cmap=COLORS["heatmap"]
    script: "scripts/plot_lit_gene_evidence.py"


rule plot_lit_gene_evidence_soma:
    input:
         gene_metadata = f"../references/gene_annotation_{ASSEMBLY}_{TAG}.feather",
         lit_evidence = '../data/external/miriam/lit_gene_dummy_vars.tsv',
         zscore_by_cluster_rep="../output/seurat3-cluster-wf/zscore_by_cluster_rep.feather"
    output: "../output/paper_submission/figures/lit-gene-evidence_soma.svg"
    params: cmap=COLORS["heatmap"]
    script: "scripts/plot_lit_gene_evidence_soma.py"

rule deg_to_tsv:
    """ This rule builds germline DEG comparisons.
        Files that it is used to create:
            '../output/paper_submission/adult_bulk_RNA-Seq_gene_level_counts.tsv.gz',
            '../output/paper_submission/larval_bulk_RNA-Seq_gene_level_counts.tsv.gz',
            '../output/paper_submission/larval_bulk_RNA-Seq_intergenic_counts.tsv.gz',
    """
    input: "../output/seurat3-cluster-wf/germline_deg/{comparison}.feather"
    output: "../output/paper_submission/{comparison}.tsv"
    run:
        (
            pd.read_feather(input[0])
            .merge(FBGN2CHROM, on=["FBgn", "gene_symbol"], how="left")
            .set_index(["FBgn", "gene_symbol", "Chromosome"])
            .to_csv(output[0], sep="\t")
        )

