
# sampletable: TSV file defining sample metadata.
#
# First column must have header name "samplename".
sampletable: 'config/sampletable.tsv'

# sample_dir: directory in which each sample is expected to have its own
# directory and fastq file[s]. If `sampletable` lists a sample with samplename
# SAMPLE1, then at least the file $sample_dir/SAMPLE1/SAMPLE1_R1.fastq.gz is
# expected.
sample_dir: 'data/rnaseq_samples'

# Directory to contain reports and other aggregations
aggregation_dir: 'data/aggregation'

# Which key in the `references` dict below to use
assembly: 'dmel'

# If not specified here, use the environment variable REFERENCES_DIR.
references_dir: references_data

aligner:
  index: 'hisat2'
  tag: 'test'

rrna:
  index: 'bowtie2'
  tag: 'rRNA'

gtf:
  tag: "test"

kallisto:
  tag: "test_transcriptome"

salmon:
  tag: "test_transcriptome"

# references has the structure:
#
#   assembly:           [ used as top-level dir for references ]
#     tag:              [ user-defined; often indicates version or release ]
#       type:           [ must be either "gtf" or "fasta" ]
#         url:          [ string or list of urls ]
#         postprocess:  [ string of importable function or dict of function and args ]
#         conversions:  [ list of gtf conversions; only if type == gtf ]
#         indexes:      [ list of indexes to build; only if type == fasta ]

references:
  dmel:
    test:
      gtf:
        url: "https://raw.githubusercontent.com/lcdb/lcdb-test-data/add-chipseq/data/annotation/dm6.small.gtf"
        postprocess: 'lib.common.gzipped'
        conversions:
          - 'refflat'
          - gffutils: # kwargs below will be provided to `gffutils.create_db`
              merge_strategy: 'merge'
              id_spec:
                  transcript: ['transcript_id', 'transcript_symbol']
                  gene: ['gene_id', 'gene_symbol']
              gtf_transcript_key: 'transcript_id'
              gtf_gene_key: 'gene_id'
              disable_infer_genes: True

          # the attribute from the GTF to consider gene ID
          - genelist:
              gene_id: 'gene_id'

          - annotation_hub:
              ahkey: 'AH49581'
              keytype: 'ENSEMBL'


      fasta:
        url: "https://raw.githubusercontent.com/lcdb/lcdb-test-data/add-chipseq/data/seq/dm6.small.fa"
        postprocess: 'lib.common.gzipped'
        indexes:
          - 'bowtie2'
          - 'hisat2'

    test_transcriptome:
      fasta:
        url: "https://raw.githubusercontent.com/lcdb/lcdb-test-data/add-chipseq/data/seq/dm6.small.transcriptome.fa"
        postprocess: 'lib.common.gzipped'
        indexes:
          - 'kallisto'
          - 'salmon'

    rRNA:
      fasta:
        url:
          - 'https://www.arb-silva.de/fileadmin/silva_databases/release_128/Exports/SILVA_128_LSURef_tax_silva_trunc.fasta.gz'
          - 'https://www.arb-silva.de/fileadmin/silva_databases/release_128/Exports/SILVA_128_SSURef_Nr99_tax_silva_trunc.fasta.gz'
        postprocess:
          function: 'lib.common.filter_fastas'
          args: 'Drosophila melanogaster'
        indexes:
          - 'hisat2'
          - 'bowtie2'
  phix:
    default:
      fasta:
        url: 'ftp://igenome:G3nom3s4u@ussd-ftp.illumina.com/PhiX/Illumina/RTA/PhiX_Illumina_RTA.tar.gz'
        postprocess: "lib.postprocess.phix.fasta_postprocess"
        indexes:
          - 'bowtie2'
