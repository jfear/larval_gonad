import pandas as pd

from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
FTP = FTPRemoteProvider()

from larval_gonad.config import read_config

common_config = read_config('../config/common.yaml')
sample_table = pd.read_csv('config/sampletable.tsv', sep='\t')
sample_attrs = sample_table.title.str.extract('(?P<species>\w+)_(?P<tissue>\w+)_(?P<sex>\w+)_(?P<rep>\w+)')
SPECIES = sample_attrs.species.unique().tolist()
TISSUE = sample_attrs.tissue.unique().tolist()


rule all:
    input: 
        '../output/neox-wf/sturgill_2007.xls',
        '../output/neox-wf/sturgill_2007_mullerD.feather',
        '../output/neox-wf/sturgill_2007_mullerE.feather',
        expand(
            '../output/neox-wf/GTF/{species}.gtf', 
            # remove w1118 and orgR and replace with dmel
            species=[
                sp
                for sp in SPECIES
                if sp.startswith("d")
            ] + ['dmel']
        ),
        expand(
            '../output/neox-wf/orthologs/{species}.tsv', 
            # remove w1118 and orgR and replace with dmel
            species=[
                sp
                for sp in SPECIES
                if sp.startswith("d")
            ] + ['dmel']
        ),
        expand(
            '../output/neox-wf/raw_counts/{title}.tsv', 
            title = sample_table.title.tolist(),
        )


rule download_strugill:
    output: '../output/neox-wf/sturgill_2007.xls'
    shell: """
        curl -o {output[0]} https://media.nature.com/original/nature-assets/nature/journal/v450/n7167/extref/nature06330-s2.xls
    """


rule sturgill_data_prep:
    input: rules.download_strugill.output[0]
    output: 
        mullerD='../output/neox-wf/sturgill_2007_mullerD.feather',
        mullerE='../output/neox-wf/sturgill_2007_mullerE.feather'
    script: 'scripts/parse_sturgill.py'


rule download_annotation:
    input: 'ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE99nnn/GSE99574/suppl/GSE99574_{species}.YO.annotation.tar.gz'
    output: '../output/neox-wf/GTF/{species}.gtf'
    script: 'scripts/download_annotation.py'


rule download_orthologs:
    input: 'ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE99nnn/GSE99574/suppl/GSE99574_{species}.ortholog.txt.tar.gz'
    output: '../output/neox-wf/orthologs/{species}.tsv'
    script: 'scripts/download_ortholog.py'


def _download_coverage_counts(wildcards):
    title = wildcards.title
    gsm = sample_table.loc[sample_table.title == title, 'gsm'].values[0]
    short = gsm[:7]
    return f'ftp://ftp.ncbi.nlm.nih.gov/geo/samples/{short}nnn/{gsm}/suppl/{gsm}_{title}.htseq_reverse.HiSAT2.YO.txt.gz'


rule download_coverage_counts:
    params: _download_coverage_counts
    output: '../output/neox-wf/raw_counts/{title}.tsv'
    script: 'scripts/download_coverage_counts.py'

