"""This workflow aims to reconcile the differences among the cell ranger runs 
and to identify which barcodes are indeed cells."""
import yaml 

import pandas as pd

from snakemake.shell import shell

configfile: 'config/config.yaml'
common_config = yaml.load(open('../config/common.yaml', 'rb').read())
ASSEMBLY = common_config['assembly']
TAG = common_config['tag']

SAMPLES = pd.read_csv('../config/scrnaseq-sampletable.tsv', sep='\t', index_col=0).index.tolist()

rule targets:
    input: 
        expand('../output/{cellranger}/dropletutils/{sample}.html',
            cellranger=config['cellranger'],
            sample=SAMPLES
        )


rule unzip_cellranger3:
    input:
        barcodes = config['data_pattern']['cellranger3-wf'].replace('matrix.mtx', 'barcodes.tsv') + '.gz',
        features = config['data_pattern']['cellranger3-wf'].replace('matrix.mtx', 'features.tsv') + '.gz',
        matrix = config['data_pattern']['cellranger3-wf'] + '.gz'
    output:
        barcodes = config['data_pattern']['cellranger3-wf'].replace('matrix.mtx', 'barcodes.tsv'),
        features = config['data_pattern']['cellranger3-wf'].replace('matrix.mtx', 'genes.tsv'),
        matrix = config['data_pattern']['cellranger3-wf']
    shell:"""
        gunzip -c {input.barcodes} > {output.barcodes} && \
        gunzip -c {input.features} > {output.features} && \
        gunzip -c {input.matrix} > {output.matrix}
    """


def _dropletutils(wildcards):
    return expand(config['data_pattern'][wildcards.cellranger],
        sample=wildcards.sample,
        assembly=ASSEMBLY,
        tag=TAG
    )

rule dropletutils:
    input: _dropletutils
    output: '../output/{cellranger}/dropletutils/{sample}.html'
    conda: '../envs/dropletutils.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 12,
        time_hr=lambda wildcards, attempt: attempt * 2
    script: 'scripts/dropletutils.Rmd'
