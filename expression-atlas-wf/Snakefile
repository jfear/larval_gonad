import pandas as pd

from larval_gonad.config import read_config

common_config = read_config('../config/common.yaml')
sample_table = pd.read_csv('config/sampletable.tsv', sep='\t')
sample_attrs = sample_table.samplename.str.extract('(?P<species>\w+)_(?P<tissue>\w+)_(?P<sex>\w+)_(?P<rep>\w+)')
SPECIES = sample_attrs.species.unique().tolist()
TISSUE = sample_attrs.tissue.unique().tolist()


rule all:
    input: 
        expand(
            '../output/expression-atlas-wf/GTF/{species}.gtf', 
            # remove w1118 and orgR and replace with dmel
            species=[
                sp
                for sp in SPECIES
                if sp.startswith("d")
            ] + ['dmel']
        ),
        '../output/expression-atlas-wf/raw_counts.feather',
        '../output/expression-atlas-wf/ortholog_annotation.feather',
        '../output/expression-atlas-wf/FB_ortholog_annotation.feather',
        '../output/expression-atlas-wf/muller_arm_assignment.feather',
        '../output/expression-atlas-wf/dmel_tau.feather',
        '../output/expression-atlas-wf/dmel_tsps.feather',
        '../output/expression-atlas-wf/dmel_male_biased_expression.tsv',
        '../output/expression-atlas-wf/dmel_testis_biased_expression.tsv'


rule download_annotation:
    params: 'ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE99nnn/GSE99574/suppl/GSE99574_{species}.YO.annotation.tar.gz'
    output: '../output/expression-atlas-wf/GTF/{species}.gtf'
    script: 'scripts/download_annotation.py'


rule download_orthologs:
    params: 'ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE99nnn/GSE99574/suppl/GSE99574_{species}.ortholog.txt.tar.gz'
    output: '../output/expression-atlas-wf/orthologs/{species}.tsv'
    script: 'scripts/download_ortholog.py'


def _download_coverage_counts(wildcards):
    samplename = wildcards.samplename
    gsm = sample_table.loc[sample_table.samplename == samplename, 'GSM'].values[0]
    short = gsm[:7]
    return f'ftp://ftp.ncbi.nlm.nih.gov/geo/samples/{short}nnn/{gsm}/suppl/{gsm}_{samplename}.htseq_reverse.HiSAT2.YO.txt.gz'


rule download_coverage_counts:
    params: _download_coverage_counts
    output: '../output/expression-atlas-wf/raw_counts/{samplename}.tsv'
    script: 'scripts/download_coverage_counts.py'


rule coverage_table:
    input: 
        counts = expand(
            '../output/expression-atlas-wf/raw_counts/{samplename}.tsv', 
            samplename = sample_table.samplename.tolist(),
        ),
        orthologs = expand(
            '../output/expression-atlas-wf/orthologs/{species}.tsv', 
            # remove w1118 and orgR and replace with dmel
            species=[
                sp
                for sp in SPECIES
                if sp.startswith("d")
            ] + ['dmel']
        )
    output: '../output/expression-atlas-wf/raw_counts.feather'
    script: 'scripts/build_counts_table.py'


rule location_table:
    input: 
        orthologs = expand(
            '../output/expression-atlas-wf/orthologs/{species}.tsv', 
            # remove w1118 and orgR and replace with dmel
            species=[
                sp
                for sp in SPECIES
                if sp.startswith("d")
            ] + ['dmel']
        ),
        gtf = expand(
            '../output/expression-atlas-wf/GTF/{species}.gtf', 
            # remove w1118 and orgR and replace with dmel
            species=[
                sp
                for sp in SPECIES
                if sp.startswith("d")
            ] + ['dmel']
        )
    output: '../output/expression-atlas-wf/ortholog_annotation.feather'
    script: 'scripts/ortholog_annotation.py'


rule fb_location_table:
    params: "ftp://ftp.flybase.net/releases/FB2018_05/precomputed_files/orthologs/dmel_orthologs_in_drosophila_species_fb_2018_05.tsv.gz"
    output: '../output/expression-atlas-wf/FB_ortholog_annotation.feather'
    script: 'scripts/fb_ortholog_annotation.py'


def _muller_arm_assignment(wildcards):
    prefix = wildcards.prefix
    return {
        'YO': rules.location_table.output[0],
        'FB': rules.fb_location_table.output[0],
    }[prefix]


rule muller_arm_assignment:
    input: 
        gene_annotation = '../references/gene_annotation_dmel_r6-24.feather',
        orthologs = _muller_arm_assignment,
        primary2secondary = '../references/primary2secondary_dmel_r6-24.pkl'
    output: '../output/expression-atlas-wf/{prefix}_muller_arm_assignment.feather'
    script: 'scripts/muller_arm_assignment.py'


rule combine_YO_FB:
    input: 
        yo = '../output/expression-atlas-wf/YO_muller_arm_assignment.feather',
        fb = '../output/expression-atlas-wf/FB_muller_arm_assignment.feather',
    output: '../output/expression-atlas-wf/muller_arm_assignment.feather'
    script: 'scripts/combine_muller_arm_assignments.py'


rule tau:
    input: 
        counts = rules.coverage_table.output[0],
        sampletable = 'config/sampletable.tsv',
        gene_annot = '../references/gene_annotation_dmel_r6-24.feather',
    output: '../output/expression-atlas-wf/dmel_tau.feather'
    script: 'scripts/calculate_tau.py'


rule tsps:
    input: 
        counts = rules.coverage_table.output[0],
        sampletable = 'config/sampletable.tsv',
        gene_annot = '../references/gene_annotation_dmel_r6-24.feather',
    output: '../output/expression-atlas-wf/dmel_tsps.feather'
    script: 'scripts/calculate_tsps.py'


rule dmel_testis_biased_expression:
    input: 
        sample_table = 'config/sampletable.tsv',
        counts_table = rules.coverage_table.output[0],
        gene_annot = '../references/gene_annotation_dmel_r6-24.feather'
    output: '../output/expression-atlas-wf/dmel_testis_biased_expression.tsv'
    log: '../output/expression-atlas-wf/dmel_testis_biased_expression.log'
    conda: "../envs/deseq2.yaml"
    script: "scripts/dmel_testis_biased_expression.R"

rule dmel_male_biased_expression:
    input: 
        sample_table = 'config/sampletable.tsv',
        counts_table = rules.coverage_table.output[0],
        gene_annot = '../references/gene_annotation_dmel_r6-24.feather'
    output: '../output/expression-atlas-wf/dmel_male_biased_expression.tsv'
    log: '../output/expression-atlas-wf/dmel_male_biased_expression.log'
    conda: "../envs/deseq2.yaml"
    script: "scripts/dmel_male_biased_expression.R"