"""Scrip to generate figures and needed material for the Science Submssion.

"""
import os
from pathlib import Path

from larval_gonad.config import read_config

workdir: '.'
configfile: 'config.yaml'

config.update(read_config('../config/common.yaml'))
config['colors'] = read_config('../config/colors.yaml')

REFERENCES_DIR = os.environ.get('REFERENCES_DIR', config.get('REFERENCES_DIR', ''))
ASSEMBLY = config['assembly']
TAG = config['tag']

rule all:
    input:
        '../output/science_submission/intron_less_genes.pkl',
        '../output/science_submission/non_coding_genes.pkl',
        '../output/science_submission/background_fbgns.pkl',
        '../output/science_submission/figures/tsne.png',
        '../output/science_submission/figures/cluster-legend.png',
        '../output/science_submission/figures/heatmap-short-lit-genes-w-rep.png',
        '../output/science_submission/figures/heatmap-unique-biomarkers-w-rep.png',
        '../output/science_submission/figures/heatmap-bulk-scRNAseq-w-rep.png',
        '../output/science_submission/figures/heatmap-scRNAseq-cluster-corr.png',
        '../output/science_submission/figures/stacked-bar-prop-by-rep.png',
        '../output/science_submission/figures/heatmap-all-genes.png',
        '../output/science_submission/figures/heatmap-all-lit-genes-w-rep.png',
        '../output/science_submission/figures/heatmap-multi-biomarkers-w-rep.png',
        '../output/science_submission/figures/boxplot-autosome-ratio.png',
        '../output/science_submission/figures/bubble-y-genes.png',
        '../output/science_submission/figures/bubble-msl-genes.png',
        '../output/science_submission/figures/violin-total-umi.png',
        '../output/science_submission/figures/boxplot-y-genes.png',
        '../output/science_submission/figures/barplot_germline_deg.png',
        '../output/science_submission/figures/scatter_bulk_deg.png',
        '../output/science_submission/figures/barplot_bulk_deg_x.png',
        '../output/science_submission/figures/bubble_germline_deg_GO_BP.png',
        '../output/science_submission/figures/bubble_germline_deg_GO_MF.png',
        '../output/science_submission/figures/bubble_germline_deg_GO_CC.png',
        '../output/science_submission/figures/tsne_comparison.png',
        '../output/science_submission/figures/boxplot-y-genes.png',
        '../output/science_submission/figures/barplot_bulk_deg_gonia_x.png',
        '../output/science_submission/figures/barplot_bulk_deg_cyte_x.png'

################################################################################
# Data Sets
################################################################################
rule fbgn2symbol:
    output: '../output/science_submission/fbgn2symbol.pkl'
    params:
          assembly=ASSEMBLY,
          tag=TAG,
          references_dir=REFERENCES_DIR
    script: 'scripts/parse_fbgn2symbol.py'

rule symbol2fbgn:
    input: rules.fbgn2symbol.output[0]
    output: '../output/science_submission/symbol2fbgn.pkl'
    script: 'scripts/convert_fbgn2symbol_to_symbol2fbgn.py'

rule intron_less_genes:
    input: Path(REFERENCES_DIR, ASSEMBLY, TAG, 'gtf', f'{ASSEMBLY}_{TAG}.gtf.db').as_posix()
    output: '../output/science_submission/intron_less_genes.pkl'
    script: 'scripts/intron_less_genes.py'

rule non_coding_genes:
    input: Path(REFERENCES_DIR, ASSEMBLY, TAG, 'gtf', f'{ASSEMBLY}_{TAG}.gtf.db').as_posix()
    output: '../output/science_submission/non_coding_genes.pkl'
    script: 'scripts/non_coding_genes.py'

rule clusters:
    input: Path(config['seurat_dir'], 'clusters.tsv').as_posix()
    params:
          resolution=config['resolution'],
          annotation=config['short_cluster_annot']
    output: '../output/science_submission/clusters.parquet'
    script: 'scripts/parse_clusters.py'

rule tsne:
    input: Path(config['seurat_dir'], 'tsne.tsv').as_posix()
    output: '../output/science_submission/tsne.parquet'
    run:
        import pandas as pd

        df = pd.read_csv(input[0], sep='\t', index_col=0)
        df.index.name = 'cell_id'
        df.to_parquet(output[0])

rule background:
    input: '../output/scrnaseq-wf/raw.parquet'
    output: '../output/science_submission/background_fbgns.pkl'
    run:
        import pandas as pd
        import pickle
        fbgns = pd.read_parquet(input[0]).index.tolist()
        with open(output[0], 'wb') as fh:
            pickle.dump(fbgns, fh)

rule gene_locs:
    input: Path(REFERENCES_DIR, ASSEMBLY, TAG, 'gtf', f'{ASSEMBLY}_{TAG}.gtf.db').as_posix()
    params: chrom_order=config['chrom_order']
    output: '../output/science_submission/gene_locations.parquet'
    script: 'scripts/gene_locations.py'

rule ptrap_scores:
    output: '../output/science_submission/ptrap_scores.parquet'
    script: 'scripts/ptrap-scores.py'

################################################################################
# Fig 1
################################################################################

rule plot_cluster_legend:
    params:
        cluster_colors=config['colors']['clusters'],
        legend_names = config['legend_names']
    output: '../output/science_submission/figures/cluster-legend.svg'
    script: 'scripts/plot_cluster_legend.py'

# (B) Correlation with bulk RNA-Seq
rule plot_heatmap_bulk_scRNAseq_w_rep:
    input:
         bulk='../output/bulk-rnaseq-wf/aggregation/tpm_gene_level_counts.parquet',
         scrnaseq='../output/scrnaseq-wf/tpm_by_rep.parquet'
    output: '../output/science_submission/figures/heatmap-bulk-scRNAseq-w-rep.svg'
    script: 'scripts/plot_heatmap_bulk_scRNAseq_w_rep.py'

# (D) tSNE of scRNA-Seq
rule plot_tsne:
    input:
         clusters=rules.clusters.output[0],
         tsne=rules.tsne.output[0],
    params:
          colors=config['colors']['clusters'],
          cluster_order=config['short_cluster_order']
    output: '../output/science_submission/figures/tsne.svg'
    script: 'scripts/plot_tsne.py'

# (E) Heatmap of literature genes
rule plot_heatmap_short_lit_genes:
    input:
         zscores='../output/scrnaseq-wf/tpm_zscore_w_rep.parquet',
         fbgn2symbol=rules.fbgn2symbol.output[0]
    output: '../output/science_submission/figures/heatmap-short-lit-genes-w-rep.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
          lit_genes=config['lit_genes_short'],
          cmap=config['colors']['heatmap']
    script: 'scripts/plot_heatmap_short_lit_genes.py'

# Supplemental Figures
rule plot_heatmap_all_genes:
    input: '../output/scrnaseq-wf/tpm_zscore_w_rep.parquet'
    output: '../output/science_submission/figures/heatmap-all-genes.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
          cmap=config['colors']['heatmap']
    script: 'scripts/plot_heatmap_all_genes.py'

rule plot_heatmap_unique_biomarkers:
    input:
         zscores='../output/scrnaseq-wf/tpm_zscore_w_rep.parquet',
         fbgn2symbol=rules.fbgn2symbol.output[0],
         biomarkers='../output/scrnaseq-wf/scrnaseq_combine_force/biomarkers_{res}.tsv'.format(res=config['resolution'])
    output: '../output/science_submission/figures/heatmap-unique-biomarkers-w-rep.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
          cmap=config['colors']['heatmap']
    script: 'scripts/plot_heatmap_unique_biomarkers.py'

rule plot_heatmap_multi_biomarkers:
    input:
         zscores='../output/scrnaseq-wf/tpm_zscore_w_rep.parquet',
         fbgn2symbol=rules.fbgn2symbol.output[0],
         biomarkers='../output/scrnaseq-wf/scrnaseq_combine_force/biomarkers_{res}.tsv'.format(res=config['resolution'])
    output: '../output/science_submission/figures/heatmap-multi-biomarkers-w-rep.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
          cmap=config['colors']['heatmap']
    script: 'scripts/plot_heatmap_multi_biomarkers.py'

rule plot_heatmap_scRNAseq_cluster_corr:
    input: '../output/scrnaseq-wf/tpm.parquet'
    output: '../output/science_submission/figures/heatmap-scRNAseq-cluster-corr.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_colors=config['colors']['clusters']
    script: 'scripts/plot_heatmap_scRNAseq_cluster_corr.py'

rule plot_heatmap_all_lit_genes:
    input:
         zscores='../output/scrnaseq-wf/tpm_zscore_w_rep.parquet',
         fbgn2symbol=rules.fbgn2symbol.output[0]
    output: '../output/science_submission/figures/heatmap-all-lit-genes-w-rep.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
          lit_genes=config['lit_genes_long'],
          cmap=config['colors']['heatmap']
    script: 'scripts/plot_heatmap_all_lit_genes.py'

rule plot_stacked_bar_prop_by_rep:
    input: '../output/scrnaseq-wf/clusters.parquet'
    output: '../output/science_submission/figures/stacked-bar-prop-by-rep.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters']
    script: 'scripts/plot_stacked_bar_prop_by_rep.py'

rule plot_heatmap_ptrap_genes_w_rep:
    input: '../output/scrnaseq-wf/tpm_zscore_w_rep.parquet', rules.ptrap_scores.output[0]
    output: '../output/science_submission/figures/heatmap-ptrap-genes-w-rep.svg'
    script: 'scripts/plot_heatmap_ptrap_genes_w_rep.py'

rule plot_heatmap_ptrap_scores:
    input: rules.ptrap_scores.output[0]
    output: '../output/science_submission/figures/heatmap-ptrap-scores.svg'
    script: 'scripts/plot_heatmap_ptrap_scores.py'

################################################################################
# Fig 2
################################################################################

# (A, B) Distribution of X:A and 4:A ratios by cluster
rule plot_boxplot_autosome_ratio:
    input:
        ratios='../output/x-to-a-wf/autosome_ratios_by_cell.parquet',
        pvals='../output/x-to-a-wf/permuted_autosome_ratio_pvalues.parquet'
    output: '../output/science_submission/figures/boxplot-autosome-ratio.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters']
    script: 'scripts/plot_boxplot_autosome_ratio.py'

# (D) Normalized Y expression by cluster
rule plot_boxplot_y_genes:
    input:
         tpm='../output/scrnaseq-wf/tpm_w_rep.parquet',
         clusters='../output/scrnaseq-wf/clusters.parquet',
         fbgn2chrom='../output/x-to-a-wf/fbgn2chrom.parquet',
    output: '../output/science_submission/figures/boxplot-y-genes.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
    script: 'scripts/plot_boxplot_y_genes.py'

# Supplemental Figures
rule plot_violin_total_umi:
    input: '../output/scrnaseq-wf/raw.parquet'
    output: '../output/science_submission/figures/violin-total-umi.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters']
    script: 'scripts/plot_violin_total_umi.py'

rule plot_bubble_y_genes:
    input:
         raw='../output/scrnaseq-wf/raw.parquet',
         clusters='../output/scrnaseq-wf/clusters.parquet',
         fbgn2chrom='../output/x-to-a-wf/fbgn2chrom.parquet',
         fbgn2symbol=rules.fbgn2symbol.output[0]
    output: '../output/science_submission/figures/bubble-y-genes.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
          cmap=config['colors']['heatmap']
    script: 'scripts/plot_bubble_y_genes.py'

rule plot_bubble_msl_genes:
    input:
         raw='../output/scrnaseq-wf/raw.parquet',
         clusters='../output/scrnaseq-wf/clusters.parquet',
         fbgn2symbol=rules.fbgn2symbol.output[0]
    output: '../output/science_submission/figures/bubble-msl-genes.svg'
    params:
          annotation=config['short_cluster_annot'],
          cluster_order=config['short_cluster_order'],
          cluster_colors=config['colors']['clusters'],
          cmap=config['colors']['heatmap'],
          msl_genes=config['msl_genes']
    script: 'scripts/plot_bubble_msl_genes.py'

################################################################################
# Fig 3
################################################################################

# Not plots needed

################################################################################
# Fig 4
################################################################################
# (A) DEG among germline
rule plot_tsne_comparison:
    input:
         clusters=rules.clusters.output[0],
         tsne=rules.tsne.output[0],
    params:
          colors=config['colors']['clusters'],
          cluster_order=config['short_cluster_order'],
          annotation=config['short_cluster_annot']
    output: '../output/science_submission/figures/tsne_comparison.svg'
    script: 'scripts/plot_tsne_comparison.py'

rule plot_barplot_germline_deg:
    input:
        gonia='../output/scrnaseq-wf/germcell_deg/gonia_vs_cytes.tsv',
        early='../output/scrnaseq-wf/germcell_deg/gonia_vs_early.tsv',
        mid='../output/scrnaseq-wf/germcell_deg/early_vs_mid.tsv',
        late='../output/scrnaseq-wf/germcell_deg/mid_vs_late.tsv',
        fbgn2chrom='../output/x-to-a-wf/fbgn2chrom.parquet',
        background=rules.background.output[0]
    output: '../output/science_submission/figures/barplot_germline_deg.svg'
    script: 'scripts/plot_barplot_germline_deg.py'

# (B) GO analysis SP vs M1°
rule plot_bubble_germline_deg_GO_BP:
    input:
         deg='../output/scrnaseq-wf/germcell_deg/gonia_vs_mid.tsv',
         background=rules.background.output[0]
    output: '../output/science_submission/figures/bubble_germline_deg_GO_BP.svg'
    script: 'scripts/plot_bubble_germline_deg_GO_BP.py'

# (E) X depleted male-biased expression
rule plot_barplot_bulk_demasculinization:
    input:
         deg='../output/bulk-rnaseq-wf/deseq2_results_tcp_vs_ocp.tsv',
         fbgn2chrom='../output/x-to-a-wf/fbgn2chrom.parquet'
    output: '../output/science_submission/figures/barplot_bulk_demasculinization.svg'
    script: 'scripts/plot_barplot_bulk_demasculinization.py'

rule plot_barplot_bulk_deg_gonia_x:
    input:
         bulk_deg='../output/bulk-rnaseq-wf/deseq2_results_tcp_vs_ocp.tsv',
         sc_deg='../output/scrnaseq-wf/germcell_deg/gonia_vs_cytes.tsv',
         fbgn2chrom='../output/x-to-a-wf/fbgn2chrom.parquet'
    output: '../output/science_submission/figures/barplot_bulk_deg_gonia_x.svg'
    script: 'scripts/plot_barplot_bulk_deg_gonia_x.py'

rule plot_barplot_bulk_deg_cyte_x:
    input:
         bulk_deg='../output/bulk-rnaseq-wf/deseq2_results_tcp_vs_ocp.tsv',
         sc_deg='../output/scrnaseq-wf/germcell_deg/gonia_vs_cytes.tsv',
         fbgn2chrom='../output/x-to-a-wf/fbgn2chrom.parquet'
    output: '../output/science_submission/figures/barplot_bulk_deg_cyte_x.svg'
    script: 'scripts/plot_barplot_bulk_deg_cyte_x.py'

# Supplemental Figures
rule plot_bubble_germline_deg_GO_MF:
    input:
         deg='../output/scrnaseq-wf/germcell_deg/gonia_vs_mid.tsv',
         background=rules.background.output[0]
    output: '../output/science_submission/figures/bubble_germline_deg_GO_MF.svg'
    script: 'scripts/plot_bubble_germline_deg_GO_MF.py'

rule plot_bubble_germline_deg_GO_CC:
    input:
         deg='../output/bulk-rnaseq-wf/deseq2_results_tcp_vs_ocp.tsv',
         background=rules.background.output[0]
    output: '../output/science_submission/figures/bubble_germline_deg_GO_CC.svg'
    script: 'scripts/plot_bubble_germline_deg_GO_CC.py'

rule plot_scatter_bulk_deg:
    input:
         deg='../output/bulk-rnaseq-wf/deseq2_results_tcp_vs_ocp.tsv'
    output: '../output/science_submission/figures/scatter_bulk_deg.svg'
    script: 'scripts/plot_scatter_bulk_deg.py'

################################################################################
# Tables
################################################################################


# rule differential_expression_tables:
#     input:
#          biomarkers='../output/scrnaseq-wf/scrnaseq_combine_force/biomarkers_res.0.6.tsv',
#          germ_soma='../output/scrnaseq-wf/germcell_soma_deg/germ_vs_soma.tsv',
#          gonia_cytes='../output/scrnaseq-wf/germcell_deg/gonia_vs_cytes.tsv',
#          gonia_early='../output/scrnaseq-wf/germcell_deg/gonia_vs_early.tsv',
#          gonia_mid='../output/scrnaseq-wf/germcell_deg/gonia_vs_mid.tsv',
#          gonia_late='../output/scrnaseq-wf/germcell_deg/gonia_vs_late.tsv',
#          raw='../output/scrnaseq-wf/raw_by_cluster_w_rep.parquet',
#          tpm='../output/scrnaseq-wf/tpm_w_rep.parquet',
#          zscore='../output/scrnaseq-wf/tpm_zscore_w_rep.parquet',
#     output: '../output/science_submission/tables/scRNASeq_cluster_deg.xlsx'
#     script: 'scripts/table_scRNASeq_cluster_deg.py'

################################################################################
# Helpers
################################################################################

rule svg_png:
    input: '{fig}.svg'
    output: '{fig}.png'
    shell: "inkscape {input[0]} --export-png={output[0]} --export-dpi=800 --export-background='white' --without-gui"

rule svg_pdf:
    input: '{fig}.svg'
    output: '{fig}.pdf'
    shell: "inkscape {input[0]} --export-pdf={output[0]}"

# vim: set ft=snakemake.python
