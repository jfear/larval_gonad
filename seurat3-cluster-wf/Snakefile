from pathlib import Path
from larval_gonad.config import read_config

commong_config = read_config('../config/common.yaml')
ASSEMBLY = commong_config['assembly']
TAG = commong_config['tag']
SAMPLES = ['testis1', 'testis2', 'testis3', 'testis4']

rule targets:
    input: 
        '../output/seurat3-cluster-wf/testis1_individual.html',
        '../output/seurat3-cluster-wf/testis2_individual.html',
        '../output/seurat3-cluster-wf/testis3_individual.html',
        '../output/seurat3-cluster-wf/testis4_individual.html',
        expand('../output/seurat3-cluster-wf/combined_n{cnt}_biomarkers.feather', cnt=[3, 4]),
        expand(
            '../output/seurat3-cluster-wf/{sample}_{ftypes}.feather', 
            sample=[
                'testis1_individual',
                'testis2_individual',
                'testis3_individual',
                'testis4_individual',
                'combined_n3',
                'combined_n4',
            ],
            ftypes=[
                "normalized",
                "metadata",
                "pca_cell_embedings",
                "pca_gene_loadings",
                "umap",
            ]
        )


rule testis1:
    input:
        rmd = 'scripts/testis1_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis1_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'


rule testis2:
    input:
        rmd = 'scripts/testis2_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis2_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'


rule testis3:
    input:
        rmd = 'scripts/testis3_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis3_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'


rule testis4:
    input:
        rmd = 'scripts/testis4_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis4_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'


rule merge_3reps:
    input: 
        rmd = 'scripts/combined_n3.Rmd',
        data = expand('../output/seurat3-cluster-wf/{sample}_individual.html', sample=SAMPLES[:3])
    output:
        html = '../output/seurat3-cluster-wf/combined_n3.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'


rule merge_4reps:
    input: 
        rmd = 'scripts/combined_n4.Rmd',
        data = expand('../output/seurat3-cluster-wf/{sample}_individual.html', sample=SAMPLES)
    output:
        html = '../output/seurat3-cluster-wf/combined_n4.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'


rule biomarkers:
    input: 
        html = "../output/seurat3-cluster-wf/combined_n{cnt}.html",
        gene_annotation = f'../references/gene_annotation_{ASSEMBLY}_{TAG}.feather'
    output: 
        tsv = "../output/seurat3-cluster-wf/combined_n{cnt}_biomarkers.tsv",
        feather = "../output/seurat3-cluster-wf/combined_n{cnt}_biomarkers.feather"
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: 'scripts/combined_biomarkers.R'


def _params(wildcards):
    return {
        'testis1_individual': 'RNA_snn_res.0.8',
        'testis2_individual': 'RNA_snn_res.0.6',
        'testis3_individual': 'RNA_snn_res.0.6',
        'testis4_individual': 'RNA_snn_res.0.6',
        'combined_n3': 'integrated_snn_res.0.3',
        'combined_n4': 'integrated_snn_res.0.3',

    }[wildcards.sample]


rule dump_robj:
    input: 
        html = "../output/seurat3-cluster-wf/{sample}.html",
        gene_annotation = f'../references/gene_annotation_{ASSEMBLY}_{TAG}.feather'
    output: 
        norm = "../output/seurat3-cluster-wf/{sample}_normalized.feather",
        metadata = "../output/seurat3-cluster-wf/{sample}_metadata.feather",
        pca_embed = "../output/seurat3-cluster-wf/{sample}_pca_cell_embedings.feather",
        pca_load = "../output/seurat3-cluster-wf/{sample}_pca_gene_loadings.feather",
        umap = "../output/seurat3-cluster-wf/{sample}_umap.feather",
    params:
        integrated_resolution = _params
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 2
    script: 'scripts/combined_dump.R'