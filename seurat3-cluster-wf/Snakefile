from pathlib import Path
from larval_gonad.config import read_config

commong_config = read_config('../config/common.yaml')
ASSEMBLY = commong_config['assembly']
TAG = commong_config['tag']
SAMPLES = ['testis1', 'testis2', 'testis3', 'testis4']

rule targets:
    input: 
        '../output/seurat3-cluster-wf/testis1_individual.html',
        '../output/seurat3-cluster-wf/testis2_individual.html',
        '../output/seurat3-cluster-wf/testis3_individual.html',
        '../output/seurat3-cluster-wf/testis4_individual.html'

rule testis1:
    input:
        rmd = 'scripts/testis1_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis1_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'

rule testis2:
    input:
        rmd = 'scripts/testis2_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis2_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'

rule testis3:
    input:
        rmd = 'scripts/testis3_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis3_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'

rule testis4:
    input:
        rmd = 'scripts/testis4_individual.Rmd'
    output: 
        html = '../output/seurat3-cluster-wf/testis4_individual.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'

rule merge:
    input: 
        rmd = 'scripts/integrated_analysis.Rmd',
        data = expand('../output/seurat3-cluster-wf/{sample}_individual.html', sample=SAMPLES)
    output:
        html = '../output/seurat3-cluster-wf/integrated_analysis.html',
    conda: '../envs/seurat3.yaml'
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 16,
        time_hr=lambda wildcards, attempt: attempt * 6
    script: '../scripts/rscript.py'